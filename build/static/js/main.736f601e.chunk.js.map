{"version":3,"sources":["components/APIService.js","components/ArticleList.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["APIService","id","body","fetch","headers","JSON","stringify","then","resp","json","ArticleList","props","articles","map","article","title","date","className","div","onClick","editArticle","DeleteArticle","deleteArticle","Form","useState","setTitle","setBody","htmlFor","type","value","placeholder","onChange","e","target","row","UpdateArticle","updatedData","catch","error","console","log","InsertArticle","insertedArticle","App","setArticles","editedArticle","setEditedArticle","useEffect","new_articles","filter","myarticle","new_article","my_article","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.736f601e.chunk.js","sourcesContent":["export default class APIService {\r\n    static UpdateArticle(id, body) {\r\n        return fetch(`http://127.0.0.1:5000/update/${id}/`, {\r\n            'method':'PUT',\r\n            headers: {\r\n              'Content-Type':'application/json'\r\n      \r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n          .then(resp => resp.json())\r\n    }\r\n\r\n    static InsertArticle(body) {\r\n        return fetch(`http://127.0.0.1:5000/add`, {\r\n            'method':'POST',\r\n            headers: {\r\n              'Content-Type':'application/json'\r\n      \r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n          .then(resp => resp.json())\r\n    }\r\n\r\n\r\n    static DeleteArticle(id) {\r\n        return fetch(`http://127.0.0.1:5000/delete/${id}/`, {\r\n            'method':'Delete',\r\n            headers: {\r\n              'Content-Type':'application/json'\r\n      \r\n            },\r\n            \r\n          })\r\n          \r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport APIService from './APIService';\r\n\r\nfunction ArticleList(props) {\r\n\r\n    const editArticle = (article) => {\r\n        props.editArticle(article)\r\n    }\r\n\r\n    const deleteArticle = (article) => {\r\n        APIService.DeleteArticle(article.id)\r\n        .then(() => props.deleteArticle(article))\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {props.articles &&  props.articles.map(article => {\r\n        return (\r\n          <div key = {article.id}>\r\n            <h2>{article.title}</h2>\r\n            <p>{article.body}</p>\r\n            <p>{article.date}</p>\r\n\r\n            < div className = \"row\">\r\n                <div div className = \"col-ma-1\">\r\n                    <button className = \"btn btn-primary\" onClick = {() => editArticle(article)}> Update</button>\r\n                   \r\n                </div>\r\n\r\n                <div div className = \"col\">\r\n                    <button className = \"btn btn-danger\" onClick = {() => deleteArticle(article)}>Delete</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n        )\r\n      })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticleList\r\n","import React, {useState} from 'react'\r\nimport APIService from '../components/APIService';\r\n\r\nfunction Form(props) {\r\n    const [title, setTitle] = useState(props.article.title)\r\n    const [body, setBody] = useState(props.article.body)\r\n\r\n    const updateArticle = () => {\r\n        APIService.UpdateArticle(props.article.id, {title, body})\r\n        .then(resp => props.updatedData(resp))\r\n        .catch(error => console.log(error))\r\n\r\n    }\r\n\r\n    const insertArticle = () => {\r\n        APIService.InsertArticle({title, body})\r\n        .then(resp => props.insertedArticle(resp))\r\n        .catch(error => console.log(error))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {props.article ? (\r\n\r\n                <div className = \"mb-3\">\r\n                    <label htmlFor = \"title\" className = \"form-label\">Title</label>\r\n                    <input type=\"text\" className = \"form-control\" value = {title} placeholder = \"Please Enter title\" onChange = {(e) => setTitle(e.target.value)}/>\r\n                \r\n                \r\n                    <label htmlFor = \"body\" className = \"form-label\">Description</label>\r\n                    <textarea row = \"5\" value = {body} onChange = {(e) => setBody(e.target.value)} className = \"form-control\" placeholder = \"Please Enter Description\"/>\r\n                    { props.article.id ? <button onClick = {updateArticle} className = \"btn btn-success mt-3\" >Update</button>\r\n                    :\r\n                    <button onClick = {insertArticle} className = \"btn btn-success mt-3\" >insert</button>\r\n                    }\r\n                    \r\n                \r\n                \r\n                </div>\r\n            \r\n            ):null}  \r\n        </div>\r\n    )\r\n\r\n}          \r\n    \r\nexport default Form\r\n","import './App.css';\nimport {useState, useEffect} from 'react';\nimport ArticleList from './components/ArticleList';\nimport Form from './components/Form'\n\nfunction App() {\n\n  const [articles, setArticles] = useState([])\n  const [editedArticle, setEditedArticle] = useState(null)\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/get', {\n      'method':'GET',\n      headers: {\n        'Content-Type':'application/json'\n\n      }\n    })\n\n    .then(resp => resp.json())\n    .then(resp => setArticles(resp))\n    //.then(resp => console.log(resp))\n    .catch(error => console.log(error))\n\n  },[])\n\n  const editArticle = (article) => {\n    //console.log(\"hello world\")\n    setEditedArticle(article)\n\n  }\n\n  const updatedData = (article) => {\n    const new_article = articles.map(my_article => {\n      if(my_article.id === article.id) {\n        return article\n      } else {\n        return my_article\n      }\n    })\n    setArticles(new_article)\n\n\n  }\n\nconst openForm = () => {\n  setEditedArticle({title:'', body:''})\n}\n\nconst insertedArticle = (article) => {\n  const new_articles = [...articles, article]\n  setArticles(new_articles)\n}\n\nconst deleteArticle = (article) => {\n  const new_articles = articles.filter(myarticle => {\n    if(myarticle.id === article.id) {\n      return false;\n    }\n    return true\n  })\n\n  setArticles(new_articles)\n}\n\n\n\n  return (\n    <div className=\"App\">\n      <div className = \"row\">\n        <div className = \"col\">\n          <h1>Hello again react</h1>\n        \n        </div>\n        <div className = \"col\">\n          <button className = \"btn btn-success\"\n          onClick = {openForm}\n          >InsertArticle</button>\n        </div>\n      </div>\n      \n      <br/>\n      <br/>\n\n      <ArticleList articles = {articles} editArticle = {editArticle}  deleteArticle = {deleteArticle}/>\n      \n      {editedArticle ? <Form article = {editedArticle} updatedData = {updatedData} insertedArticle = {insertedArticle}/> : null}\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}